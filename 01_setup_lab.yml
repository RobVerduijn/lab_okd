- name: Setup the lab
  hosts: localhost
  gather_facts: false
  become: false

  tasks:
    - name: Fail if not set properly
      ansible.builtin.assert:
        that:
          - warning is not defined
        fail_msg: You did not specify the correct inventory subdir.

    - name: Assert that cluster is set
      ansible.builtin.assert:
        that:
          - cluster is defined
        fail_msg: Cluster is not set, did you specify the inventory ?

    - name: Add localhost to all and {{ cluster }}
      ansible.builtin.add_host:
        name: localhost
        groups:
          - all
          - "{{ cluster }}"

    - name: Check init settings and vm's
      ansible.builtin.include_role:
        name: prepare

    - name: Debug
      ansible.builtin.debug:
        var: init_vms

    - name: Warn about cluster init
      when: init_cluster | default(false) | bool
      ansible.builtin.pause:
        prompt: |-
          Reinitializing cluster: {{ cluster }}
          This means all systems from this cluster will be wiped

    - name: Create vm's
      ansible.builtin.include_role:
        name: lab
      vars:
        lab_infra: "{{ ocp_infra }}"

- name: Configure svc host
  hosts: svc
  gather_facts: false
  become: false
  remote_user: root

  tasks:
    - name: Check init settings and vm's
      ansible.builtin.include_role:
        name: prepare

    - name: Start svc vm
      community.libvirt.virt:
        name: "{{ groupvars['svc'][0] }}"
        state: running
      delegate_to: localhost
      when: hostvars[groups['svc'][0]]['virtual']

    - name: Wait for system to become reachable
      ansible.builtin.wait_for_connection:

    - name: Gather facts
      ansible.builtin.setup:

    - name: Setup the services on the svc vm
      ansible.builtin.include_role:
        name: ocp_svc

- name: Configure loadbalancer host
  hosts: loadbalancer
  gather_facts: false
  become: false

  tasks:
    - name: Check init settings and vm's
      ansible.builtin.include_role:
        name: prepare

    - name: Start svc vm
      community.libvirt.virt:
        name: "{{ groups['loadbalancer'][0] }}"
        state: running
      delegate_to: localhost
      when: hostvars[groups['loadbalancer'][0]]['virtual']

    - name: Wait for system to become reachable
      ansible.builtin.wait_for_connection:

    - name: Gather facts
      ansible.builtin.setup:

    - name: Setup loadbalancer
      ansible.builtin.include_role:
        name: ocp_lb
      vars:
        ocp_lb_enable_bootstrap: true

- name: Apply personal preferences
  hosts: loadbalancer,svc
  gather_facts: false
  become: false
  remote_user: root

  tasks:
    - name: Include personal preferences
      ansible.builtin.include_role:
        name: lab
        tasks_from: personal
