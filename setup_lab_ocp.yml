- name: Configure the bastion system
  hosts: localhost
  gather_facts: false
  become: false

  tasks:
    - name: Check if vm's are present
      ansible.builtin.include_role:
        name: ocp_infra
        tasks_from: check_vm.yml

    - name: Init all
      ansible.builtin.set_fact:
        init_svc: true
        init_cluster: true
      when: init_all | default('false') | bool

    - name: Ensure cluster is set
      ansible.builtin.set_fact:
        cluster: "{{ cluster | default('ocp_local') }}"

    - name: Load vars from group {{ cluster }}
      ansible.builtin.group_by:
        key: "{{ cluster }}"

    - name: The version of the installation
      ansible.builtin.debug:
        msg: We will be installing ocp release {{ ocp_release }} on cluster {{ cluster }}

    - name: Warn about cluster init
      when: init_cluster | default(false) | bool
      ansible.builtin.pause:
        prompt: |-
          Reinitializing cluster: {{ cluster }}
          This means all systems from this cluster will be wiped
          And the local configuration directory deleted
          Press enter to continue

    - name: Configure services
      ansible.builtin.include_role:
        name: ocp_infra
      when: init_svc | default(false) | bool
      vars:
        ocp_infra_init_svc: true

    - name: Create vm's
      ansible.builtin.include_role:
        name: ocp_infra
      when: init_cluster | default(false) | bool

- name: Configure svc host
  hosts: loadbalancer
  gather_facts: false
  become: false
  remote_user: root

  tasks:
    - name: Start svc vm
      community.libvirt.virt:
        name: "svc"
        state: running
      delegate_to: localhost

    - name: Wait for system to become reachable
      ansible.builtin.wait_for_connection:

    - name: Wipe the harddrive
      ansible.builtin.shell: |
        dd if=/dev/zero of=/dev/sda bs=1M count=1
        reboot -f
      async: 5
      poll: 5
      ignore_errors: true
      tags:
        - skip_ansible_lint

    - name: Wait for system to become reachable
      ansible.builtin.wait_for_connection:

#    - name: The status of mirror installation is
#      ansible.builtin.debug:
#        msg: Mirroring of the registry will {{ ocp_local_registry | default(false) | ternary("", "NOT!!") }} be performed

#    - name: Install ocp client
#      ansible.builtin.include_role:
#        name: ocp_client
#
#    - name: Setup pxe content
#      ansible.builtin.include_role:
#        name: ocp_pxe_content
#
#    - name: Create ocp image mirror script and secret
#      ansible.builtin.include_role:
#        name: ocp_mirror
#      when: ocp_local_registry | default(false)
#
#    - name: Create ocp ignition files
#      ansible.builtin.include_role:
#        name: ocp_ignition_files
#
#    - name: Create virtual machines
#      ansible.builtin.include_role:
#        name: ocp_vm
