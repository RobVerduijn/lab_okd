- name: Ensure the package facts are loaded
  ansible.builtin.package_facts:
  when:
    - ansible_facts['packages'] is not defined
    - ansible_distribution == 'Rocky'

- name: Ensure required packages are installed
  ansible.builtin.dnf:
    name: "{{ ocp_lb_packages }}"
    state: present
  when:
    - ansible_distribution == 'Rocky'
    - ocp_lb_packages | ansible.builtin.difference(ansible_facts['packages'].keys()) | length > 0

- name: Set haproxy_connect_any flag
  ansible.posix.seboolean:
    name: haproxy_connect_any
    state: true
    persistent: true
  when: ansible_distribution == 'Rocky'

- name: Ensure haproxy.cfg configuration is present
  ansible.builtin.template:
    src: haproxy.cfg.j2
    dest: /etc/haproxy/haproxy.cfg
    mode: "0644"
  notify:
    - Restart haproxy

- name: Ensure ha-proxy is enabled and started
  ansible.builtin.systemd_service:
    name: haproxy
    enabled: true
    state: started

- name: Open firewall port for api
  ansible.posix.firewalld:
    port: 6443/tcp
    state: enabled
    permanent: true
    immediate: true
    offline: true
  when: ansible_distribution == 'Rocky'

- name: Open firewall port for machineconfig
  ansible.posix.firewalld:
    port: 22623/tcp
    state: enabled
    permanent: true
    immediate: true
    offline: true
  when: ansible_distribution == 'Rocky'

- name: Open firewall port for haproxy stats
  ansible.posix.firewalld:
    port: 32700/tcp
    state: enabled
    permanent: true
    immediate: true
    offline: true
  when: ansible_distribution == 'Rocky'

- name: Open firewall for http
  ansible.posix.firewalld:
    service: http
    state: enabled
    permanent: true
    immediate: true
    offline: true
  notify:
    - Reload firewalld
  when: ansible_distribution == 'Rocky'

- name: Open firewall for https
  ansible.posix.firewalld:
    service: https
    state: enabled
    permanent: true
    immediate: true
    offline: true
  notify:
    - Reload firewalld
  when: ansible_distribution == 'Rocky'
