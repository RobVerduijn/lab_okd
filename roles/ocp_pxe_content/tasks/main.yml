- name: Determine coreos stream metadata
  ansible.builtin.command: openshift-install coreos print-stream-json
  register: coreos_stream_metadata
  tags:
    - skip_ansible_lint

- name: Store output in var
  ansible.builtin.set_fact:
    coreos_stream_metadata: "{{ coreos_stream_metadata['stdout'] | from_json }}"

- name: Set the download urls
  ansible.builtin.set_fact:
    initramfs_url: "{{ coreos_stream_metadata['architectures']['x86_64']['artifacts']['metal']['formats']['pxe']['initramfs']['location'] }}"
    kernel_url: "{{ coreos_stream_metadata['architectures']['x86_64']['artifacts']['metal']['formats']['pxe']['kernel']['location'] }}"
    rootfs_url: "{{ coreos_stream_metadata['architectures']['x86_64']['artifacts']['metal']['formats']['pxe']['rootfs']['location'] }}"
    initramfs_sha256: "{{ coreos_stream_metadata['architectures']['x86_64']['artifacts']['metal']['formats']['pxe']['initramfs']['sha256'] }}"
    kernel_sha256: "{{ coreos_stream_metadata['architectures']['x86_64']['artifacts']['metal']['formats']['pxe']['kernel']['sha256'] }}"
    rootfs_sha256: "{{ coreos_stream_metadata['architectures']['x86_64']['artifacts']['metal']['formats']['pxe']['rootfs']['sha256'] }}"

- name: Download files to content server
  delegate_to: "{{ content_server }}"
  become: true
  block:
    - name: Download initramfs
      ansible.builtin.get_url:
        url: "{{ initramfs_url }}"
        dest: "{{ content_server_tftpboot_dir }}"
        mode: "0644"
        owner: root
        group: root

    - name: Ensure initramfs link is set
      ansible.builtin.file:
        src: "{{ initramfs_url.split('/')[-1] }}"
        dest: "{{ content_server_tftpboot_dir }}/scos-live-initramfs-x86_64.img"
        state: link

    - name: Download kernel
      ansible.builtin.get_url:
        url: "{{ kernel_url }}"
        dest: "{{ content_server_tftpboot_dir }}"
        mode: "0644"
        owner: root
        group: root

    - name: Ensure kernel link is set
      ansible.builtin.file:
        src: "{{ kernel_url.split('/')[-1] }}"
        dest: "{{ content_server_tftpboot_dir }}/scos-live-kernel-x86_64.img"
        state: link

    - name: Download rootfs
      ansible.builtin.get_url:
        url: "{{ rootfs_url }}"
        dest: "{{ content_server_webdir }}"
        mode: "0644"
        owner: root
        group: root

    - name: Ensure rootfs link is set
      ansible.builtin.file:
        src: "{{ rootfs_url.split('/')[-1] }}"
        dest: "{{ content_server_webdir }}/scos-live-rootfs.x86_64.img"
        state: link
