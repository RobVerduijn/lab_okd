{% set hostname = host['name'] %}
{% set role = host['role'] %}
{% set ram = lab_role[role]['ram'] %}
{% set ramunit = lab_role[role]['ramunit'] %}
{% set vcpu = lab_role[role]['vcpu'] %}

<domain type="kvm">
  <name>{{ hostname }}</name>
  <metadata>
    <libosinfo:libosinfo xmlns:libosinfo="http://libosinfo.org/xmlns/libvirt/domain/1.0">
      <libosinfo:os id="http://fedoraproject.org/coreos/stable"/>
    </libosinfo:libosinfo>
  </metadata>
  <memory unit="Gib">{{ ram }}</memory>
  <currentMemory unit="{{ ramunit }}">{{ ram }}</currentMemory>
  <vcpu placement="static">{{ vcpu }}</vcpu>
  <os{% if lab_libvirt_boot == "efi"  %} firmware="efi"{% endif %}>
    <type arch="x86_64" machine="pc-q35-8.2">hvm</type>
{% if lab_libvirt_boot == "efi"  %}
    <firmware>
    {% if lab_libvirt_secure_boot %}
      <feature enabled="yes" name="enrolled-keys"/>
      <feature enabled="yes" name="secure-boot"/>
    </firmware>
    <loader readonly="yes" secure="yes" type="pflash" format="qcow2">/usr/share/edk2/ovmf/OVMF_CODE_4M.secboot.qcow2</loader>
    <nvram template="/usr/share/edk2/ovmf/OVMF_VARS_4M.secboot.qcow2" format="qcow2"/>
    {% else %}
      <feature enabled="no" name="enrolled-keys"/>
      <feature enabled="no" name="secure-boot"/>
    </firmware>
    <loader readonly="yes" secure="no" type="pflash" format="qcow2">/usr/share/edk2/ovmf/OVMF_CODE_4M.qcow2</loader>
    <nvram template="/usr/share/edk2/ovmf/OVMF_VARS_4M.qcow2" format="qcow2"/>
    {% endif %}
    
{% endif %}
    <bootmenu enable="yes"/>
  </os>
  <features>
    <acpi/>
    <apic/>
    <vmport state="off"/>
  </features>
  <cpu mode="host-passthrough" check="none" migratable="on"/>
  <clock offset="utc">
    <timer name="rtc" tickpolicy="catchup"/>
    <timer name="pit" tickpolicy="delay"/>
    <timer name="hpet" present="no"/>
  </clock>
  <on_poweroff>destroy</on_poweroff>
  <on_reboot>restart</on_reboot>
  <on_crash>destroy</on_crash>
  <pm>
    <suspend-to-mem enabled="no"/>
    <suspend-to-disk enabled="no"/>
  </pm>
  <devices>
    <emulator>/usr/bin/qemu-system-x86_64</emulator>
{% for drive in ['sda','sdb'] %}
{%  if lab_role[role][drive] is defined %}
    <disk type="file" device="disk">
      <driver name="qemu" type="qcow2" discard="unmap"/>
      <source file="{{ lab_libvirt_storage_location }}/{{ hostname }}_{{ drive }}.qcow2"/>
      <target dev="{{ drive }}" bus="scsi"/>
{%    if drive == 'sda' %}
      <boot order="1"/>
{%    endif %}
    </disk>
{%  endif %}
{% endfor %}
{% if host['role'] in ['svc','loadbalancer'] %}
    <disk type="file" device="cdrom">
      <driver name="qemu" type="raw"/>
      <source file="{{ lab_libvirt_storage_location }}/{{ (lab_rocky_iso_url | ansible.builtin.split('/'))[-1] }}"/>
      <target dev="sdc" bus="scsi"/>
      <readonly/>
      <boot order="2"/>
    </disk>
    <disk type="file" device="cdrom">
      <driver name="qemu" type="raw"/>
      <source file="{{ lab_libvirt_storage_location }}/{{ hostname }}-ks.iso"/>
      <target dev="sdd" bus="scsi"/>
      <readonly/>
    </disk>
{% endif %}
    <controller type="sata" index="0">
    </controller>
    <controller type="virtio-serial" index="0">
    </controller>
    <controller type="scsi" index="0" model="virtio-scsi"/>
    <interface type="{{ lab_libvirt_network['type'] }}">
      <mac address="{{ host['mac'] }}"/>
      <source {{ lab_libvirt_network['type'] }}="{{ lab_libvirt_network['source'] }}"/>
      <model type="virtio"/>
      <boot order="3"/>
    </interface>
    <serial type="pty">
      <target type="isa-serial" port="0">
      </target>
    </serial>
    <console type="pty">
      <target type="serial" port="0"/>
    </console>
    <channel type="unix">
      <target type="virtio" name="org.qemu.guest_agent.0"/>
    </channel>
    <channel type="spicevmc">
      <target type="virtio" name="com.redhat.spice.0"/>
    </channel>
    <input type="tablet" bus="usb"/>
    <input type="mouse" bus="ps2"/>
    <input type="keyboard" bus="ps2"/>
    <graphics type="spice" autoport="yes">
      <listen type="address"/>
      <image compression="off"/>
    </graphics>
    <sound model="ich9"/>
    <audio id="1" type="spice"/>
    <video>
      <model type="virtio" heads="1" primary="yes"/>
    </video>
    <redirdev bus="usb" type="spicevmc"/>
    <redirdev bus="usb" type="spicevmc"/>
    <watchdog model="itco" action="reset"/>
    <memballoon model="virtio"/>
    <rng model="virtio">
      <backend model="random">/dev/urandom</backend>
    </rng>
  </devices>
</domain>
