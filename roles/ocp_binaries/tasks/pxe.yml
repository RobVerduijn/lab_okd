- name: Determine coreos stream metadata
  ansible.builtin.command: "{{ ocp_assetsdir }}/openshift-install coreos print-stream-json"
  register: coreos_stream_metadata
  tags:
    - skip_ansible_lint
  delegate_to: localhost

- name: Store output in var
  ansible.builtin.set_fact:
    coreos_stream_metadata: "{{ coreos_stream_metadata['stdout'] | from_json }}"

- name: Set the download urls
  ansible.builtin.set_fact:
    initramfs_url: "{{ coreos_stream_metadata['architectures']['x86_64']['artifacts']['metal']['formats']['pxe']['initramfs']['location'] }}"
    kernel_url: "{{ coreos_stream_metadata['architectures']['x86_64']['artifacts']['metal']['formats']['pxe']['kernel']['location'] }}"
    rootfs_url: "{{ coreos_stream_metadata['architectures']['x86_64']['artifacts']['metal']['formats']['pxe']['rootfs']['location'] }}"

- name: Ensure download dir is present
  ansible.builtin.file:
    path: /var/lib/tftpboot/boot
    state: directory
    mode: "0755"
    owner: root
    group: root
    setype: tftpdir_rw_t

- name: Download initramfs
  ansible.builtin.get_url:
    url: "{{ initramfs_url }}"
    dest: "{{ ocp_binaries_tftpdir }}"
    mode: "0644"
    owner: root
    group: root
    setype: tftpdir_rw_t

- name: Ensure initramfs link is set
  ansible.builtin.file:
    src: "{{ initramfs_url.split('/')[-1] }}"
    dest: "{{ ocp_binaries_tftpdir }}/scos-live-initramfs-x86_64.img"
    state: link

- name: Download kernel
  ansible.builtin.get_url:
    url: "{{ kernel_url }}"
    dest: "{{ ocp_binaries_tftpdir }}"
    mode: "0644"
    owner: root
    group: root
    setype: tftpdir_rw_t

- name: Ensure kernel link is set
  ansible.builtin.file:
    src: "{{ kernel_url.split('/')[-1] }}"
    dest: "{{ ocp_binaries_tftpdir }}/scos-live-kernel-x86_64.img"
    state: link

- name: Download rootfs
  ansible.builtin.get_url:
    url: "{{ rootfs_url }}"
    dest: "{{ ocp_binaries_webdir }}"
    mode: "0644"
    owner: root
    group: root

- name: Ensure rootfs link is set
  ansible.builtin.file:
    src: "{{ rootfs_url.split('/')[-1] }}"
    dest: "{{ ocp_binaries_webdir }}/scos-live-rootfs.x86_64.img"
    state: link

- name: Copy ignition files to ignition dir on webserver
  ansible.builtin.copy:
    src: "{{ ocp_assetsdir }}/{{ cluster }}/{{ ignitionfile }}"
    dest: "{{ ocp_binaries_webdir }}/{{ ignitionfile }}"
    setype: httpd_sys_content_t
    mode: "0644"
    owner: root
    group: root
  loop_control:
    loop_var: ignitionfile
  loop:
    - bootstrap.ign
    - master.ign
    - worker.ign
