- name: Read vm vars
  ansible.builtin.group_by:
    key: "{{ vm_name }}"

- name: Run all as root
  remote_user: root
  block:
    - name: Check if there is allready a vm named {{ vm_name }}
      community.libvirt.virt:
        command: list_vms
      register: current_vms

    - name: Delete old vm {{ vm_name }}
      when: vm_name in current_vms['list_vms']
      block:
        - name: Stop vm {{ vm_name }}
          community.libvirt.virt:
            name: "{{ vm_name }}"
            state: destroyed

        - name: Delete storage {{ vm_name }}
          ansible.builtin.file:
            path: "{{ storage_location }}"
            state: absent

        - name: Delete efi nvram {{ vm_name }}
          ansible.builtin.file:
            path: /var/lib/libvirt/qemu/nvram/{{ vm_name }}_VARS.qcow2
            state: absent

        - name: Undefine vm {{ vm_name }}
          community.libvirt.virt:
            name: "{{ vm_name }}"
            command: undefine

    - name: Create image {{ vm_name }}
      ansible.builtin.command: qemu-img create -f qcow2 -o preallocation=metadata {{ storage_location }} {{ size }}
      args:
        creates: "{{ storage_location }}"

    - name: Define vm {{ vm_name }}
      community.libvirt.virt:
        command: define
        xml: "{{ lookup('template', 'vm.xml.j2') }}"

    - name: Start vm {{ vm_name }}
      community.libvirt.virt:
        name: "{{ vm_name }}"
        state: running
